//快速排序的核心代码

//参考大话数据结构----方法一
void QuickSort(int *pdata,int low,int high)
{
	if (low<high)
	{
		int first=low,last=high;
		int key=pdata[first];
		while (first<last)
		{
			while (first<last&&pdata[last]>=key)  //从右向左找第一个小于标准值的位置
				last--;
			if(first<last)
			pdata[first]=pdata[last];    //小的数排到前面
			while (first<last&&pdata[first]<=key) //从左向右找比key小的值的位置,位置正确就不会进行调整
				first++;
			if(first<last)
			pdata[last]=pdata[first];    //大的数排到后面
		}		
		pdata[first]=key;

		QuickSort(pdata,low,first-1);  //以first为中心分成两部分，
		QuickSort(pdata,first+1,high);
	}
}
//方法二
//参考 http://developer.51cto.com/art/201403/430986.htm#commment
//很好理解（巡视的数组元素，不是比基准大的，就是比基准小的）
void quickSort(int *pdata,int left,int right)
{
	if (left>=right)
	{
		return;
	}
	if(left<right)//如果需要排序的元素大于1个
	{
		int temp=0;
		int key=pdata[left];
		int i=left,j=right;
		while (i!=j)
		{
			while (pdata[j]>=key&&i<j) //右边的哨兵开始向左巡逻
				j--;
			while(pdata[i]<=key&&i<j) //左边的哨兵开始训练
				i++;
			if (i<j)  //如果两个哨兵没有相遇，则数据进行交换
			{
				temp=pdata[j];
				pdata[j]=pdata[i];
				pdata[i]=temp;
			}
		}
		pdata[left]=pdata[i];//i停的位置即<key的位置,i的值放到最左边
		pdata[i]=key;//基准位归位

		quickSort(pdata,left,i-1);//以i的位置为基准,分成两部分，左部分
		quickSort(pdata,i+1,right);//右半部分
	}
}
